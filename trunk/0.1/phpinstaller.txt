phpInstaller - phpUpdater - phpLicensor

phpInstaller:
	- Free, downloadable installer application (available at phpapps.duanejeffers.com) that assists php web applications with installations. (Bundled with phpUpdater)
	- Includes support for phpLicensor built in.
	- Uses flat xml file (.install) to explain where the file is on the internet, what queries need to be run, what files need to be written.
	- Uses zip/gzip functionality to create .install-data encrypted data file. (mcrypt)

phpUpdater:
	- Free, downloadable update install application (available at phpapps.duanejeffers.com) that assists php web applications with updates. (Bundled with phpInstaller)
	- Includes support for phpLicensor built in.
	- Uses flat xml file (.update) to explain where the file is on the internet, what queries need to be run, what files need to be written.
	- Uses zip/gzip functionality to create .update-data encrypted data file. (mcrypt)

phpLicensor:
	- Paid Licensing Server to assist php web applications with licensing for products (available for purchase at phpapps.duanejeffers.com).
	- phpInstaller and phpUpdater has built in support for this already.
	- A SOAP server is used to validate installs. 
		- Method:
		- The user starts the install process with phpInstaller. 
		- phpInstaller opens a SOAP Connection to the phpLicensor server.
		- phpLicensor responds with methods of licensing verification (License Key, Login Authentication).
		- Depending on the method, user inputs proper requested info.
			- Key Based: user inputs key, phpInstaller sends request to phpLicensor, phpLicensor responds with a yay or nay.
			- Login based: user logs in, phpInstaller sends request to phpLicensor, phpLicensor responds with valid/invalid. 
				       - If valid, then user can choose what license they want to use. 
				       - If invalid, phpInstaller requests user to create a login. Once login is created, the user is then prompted to pay for license or 
					 input a key to tie to the account.
		- Once verified, phpInstaller continues with the install.
		- phpLicensor also encrypts the .install-data/.update-data files on the fly with the user's key. This is to keep the data locked over transmission over the
		  internet. As well as makes it so that the data is unique to the user (makes it harder to decrypt). The key is made up of an md5 hash of the username + 
		  md5(md5(password).salt). The key is then broken up into an array of 5 chars per iteration. ($key[0]=a4d08-$key[1]=230hf..etc).
	- phpLicensor has the ability to serve multiple and different licenses for different programs.
	- phpLicensor can also be used in a service method to provide small php developers with access to the program, and not have to worry about serving the data 
	  themselves.
	- phpapps.duanejeffers.com will also host the first phpLicensor service. It will sit behind an SSL Gateway for secure transfer. 
		- https://www.ssl.hghfent.com/phplicensor is the gateway.
		- https://www.ssl.hghfent.com/_enc/downloads is the download directory.
		- Hosted Service will also host the files for the project (ideal method). Linking method would not be suggested because the files can not be encrypted for 
		  transfer.
	- The Service would cost 100 bucks a year, 10 dollars a month (billed quarterly). Hosted Service would have complete upgrades once available.
	- The app would cost 300 dollars for 2 years of updates. 250 dollars for a reup of the license. 800 dollars for lifetime of updates. (Google Checkout will handle
	  the payment processing).
	- Could build in paypal, google checkout payment methods in to phpInstaller/phpUpdater.
